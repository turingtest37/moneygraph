PREFIX gist: <https://w3id.org/semanticarts/ns/ontology/gist/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mg: <https://w3id.org/moneygraph/ns/ontology/>
PREFIX mgx: <https://w3id.org/moneygraph/ns/taxonomy/>
PREFIX mg3: <https://w3id.org/moneygraph/ns/data/>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>

CONSTRUCT
{


    ?__trade_event_iri a gist:Event .
    ?__trade_event_iri mg:longDescription ?Description .
    ?__trade_event_iri gist:hasMagnitude ?__ytm_magn .
    ?__trade_event_iri gist:hasMagnitude ?__int_days_magn .

# Yield to Maturity (%)
    ?__ytm_magn a gist:Magnitude ;
        gist:hasUnitOfMeasure mg:_RatioUnit_annualYield ;
# Stored here as a fraction, not a percentage, e.g. 0.04 NOT 4.0
        gist:numericValue ?__ytm_num ;
        gist:isCategorizedBy mgx:_Aspect_yieldToMaturity ;
    .

# Interest Days Paid 
    ?__int_days_magn a gist:Magnitude ;
        gist:hasUnitOfMeasure gist:_day ;
        gist:numericValue ?__int_days ;
        gist:isCategorizedBy mgx:_Aspect_daysOfInterestPaid ;
    .
    
    ?__trade_event_iri mg:transactionDate ?__transaction_date .
    ?__trade_event_iri mg:settlementDate ?__settlement_date .
    ?__trade_event_iri gist:isCharacterizedAs ?__event_type .

# Security account is linked to Security
# Only correctly linked here when security is NOT a bond
    ?__security_account gist:hasPositionIn ?__security ;
        gist:isAffectedBy ?__trade_event_iri ;
        gist:isAffectedBy ?__next_coupon_evt ;
        gist:isAffectedBy ?__repayment_event ;
    .

# Security conforms to bond repayment conditions an 
    ?__security gist:conformsTo ?__bond_repayment_terms, ?__coupon_payment_terms ;
        skos:note ?__debt_details_str ;
        mg:isIssuedBy ?__issuer_iri ;
    .

# Issuer
    ?__issuer_iri a gist:Organization ;
        skos:prefLabel ?__issuer_str ;
    .

# A security is traded on an exchange
    ?__security mg:isTradedOn ?__exchange .

# Bond Repayment Conditions indicate whether the bond is callable
    ?__bond_repayment_terms a mg:BondRepaymentTerms ;
        mg:callable ?__is_callable ;
        gist:specifies ?__repayment_event ;
    .

    ?__repayment_event a gist:ScheduledEvent, gist:Event ;
        gist:affects ?__security_account ;
        mg:plannedOccursDate ?__maturity ;
        gist:isCharacterizedAs mgx:_FinancialBusinessEventType_debtPrincipalRepayment ;
        gist:hasMagnitude ?__purchase_qty_magn ;
    .

# Coupon Payment Terms dictate the coupon rate (%) and schedule of interest payments
    ?__coupon_payment_terms gist:specifies ?__coupon_payment_schedule ;
        gist:specifies ?__coupon_magn ;
        mg:couponPaymentMonthNumber ?__coupon_mo_earlier ;
        mg:couponPaymentMonthNumber ?__coupon_mo_later ;
        mg:couponPaymentMonthDayNumber ?__mo_day_nbr ;
    .

# Coupon Rate (%)
    ?__coupon_magn a gist:BondCoupon ;
        gist:hasUnitOfMeasure mg:_RatioUnit_annualInterestRate ;
# Stored here as a fraction, not a percentage, e.g. 0.04 NOT 4.0
        gist:numericValue ?__coupon_rate ;
        gist:isCategorizedBy mgx:_Aspect_annualInterestRate ;
    .


# First coupon after the bond is purchased
    ?__coupon_payment_schedule a mg:CouponPaymentSchedule ; 
        gist:hasMember ?__next_coupon_evt ;
    .

# Each coupon payment is a scheduled event 
    ?__next_coupon_evt a gist:ScheduledEvent ;
        skos:prefLabel ?__next_cpn_label ;
        mg:plannedOccursDate ?__next_cpn_dt ;
        gist:isCharacterizedAs mgx:_FinancialBusinessEventType_interestRemittance ;
    .

# Purchase Case
    ?__trade_event_iri gist:hasMagnitude ?__purchase_qty_magn .
    ?__purchase_qty_magn a gist:Magnitude ;
        gist:numericValue ?__qty_amount ;
        gist:hasUnitOfMeasure gist:_each ;
        gist:isCategorizedBy mgx:_Aspect_securityShareCount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__purchase_price_magn .
    ?__purchase_price_magn a gist:Magnitude;
        gist:numericValue ?__price_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityShareUnitPriceAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__purchase_gross_amt_magn .
    ?__purchase_gross_amt_magn a gist:Magnitude ;
        gist:numericValue ?__gross_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeGrossAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__purchase_commission_magn .
    ?__purchase_commission_magn a gist:Magnitude ;
        gist:numericValue ?__commission_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeTransactionCommission ;
    .
    
    ?__trade_event_iri gist:hasMagnitude ?__purchase_sec_fees_magn .
    ?__purchase_sec_fees_magn a gist:Magnitude ;
        gist:numericValue ?__sec_fees_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_feeAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__purchase_net_amt_magn .
    ?__purchase_net_amt_magn a gist:Magnitude ;
        gist:numericValue ?__net_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeNetAmount ;
    .

# # Sale Case

    ?__trade_event_iri gist:hasMagnitude ?__sale_qty_magn .
    ?__sale_qty_magn a gist:Magnitude ;
        gist:numericValue ?__qty_amount ;
        gist:hasUnitOfMeasure gist:_each ;
        gist:isCategorizedBy mgx:_Aspect_securityShareCount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_price_magn .
    ?__sale_price_magn a gist:Magnitude;
        gist:numericValue ?__price_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityShareUnitPriceAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_gross_amt_magn .
    ?__sale_gross_amt_magn a gist:Magnitude ;
        gist:numericValue ?__gross_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeGrossAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_commission_magn .
    ?__sale_commission_magn a gist:Magnitude ;
        gist:numericValue ?__commission_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeTransactionCommission ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_sec_fees_magn .
    ?__sale_sec_fees_magn a gist:Magnitude ;
        gist:numericValue ?__sec_fees_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_feeAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_interest_magn .
    ?__sale_interest_magn a gist:Magnitude ;
        gist:numericValue ?__interest_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeInterestAmount ;
    .

    ?__trade_event_iri gist:hasMagnitude ?__sale_net_amt_magn .
    ?__sale_net_amt_magn a gist:Magnitude ;
        gist:numericValue ?__net_amount ;
        gist:hasUnitOfMeasure ?__event_currency ;
        gist:isCategorizedBy mgx:_Aspect_securityTradeNetAmount ;
    .


}

#### Fields

# CurrencyCode_Group_Account
# ,Trade Date
# ,Settlement date
# ,Trade #
# ,Action
# ,Quantity
# ,Symbol
# ,Description
# ,TB
# ,EX
# ,Price
# ,Gross amount
# ,Comm
# ,SEC fees
# ,Interest amount
# ,Net amount
# ,Net amount (account currency)

# U.S. stocks and options - Account 5159061018,06-02-23,08-02-23,D20C47,Buy,50,XLK,"SELECT SECTOR SPDR TRUST, THE TECHNOLOGY SELECT SECTOR, SPDR FUND",A,NY,140.20,"(7,010.00)",0.00,0.00,0.00,"(7,010.00)","(7,010.00)"
# Canadian fixed income - Account 5159061018,18-04-23,20-04-23,QTPM7X,Sell,"10,000",,"RES BELL CANADA, 4.7% SER M-29 FIN MAT 9/11/23, PRINC CALL CYC BF0, DUE 09/11/2023, YTM: 5.7180%, QUESTRADE REMUNERATION WAS ADDED TO THE PRICE OF THE SECURITY(IN THE CASE OF A PURCHASE) OR DEDUCTED FROM THE PRICE OF THE SECURITY(IN THE CASE OF A SALE). THIS AMOUNT WAS IN ADDITION TO ANY COMMISSION THIS TRADE CONFIRMATION SHOWS AS CHARGED TO YOU.",A,CU,97.794,"9,779.40",0.00,0.00,0.00,"9,779.40","9,779.40"
# Canadian fixed income - Account 5159061018,19-04-23,21-04-23,QTQQ9N,Buy,"10,000",,"BOMBARDIER INC, DUE 12/22/2026 07.350% JD 22, YTM: 6.3180%, INT DAYS 119,NEXT CPN 23/06/22, CALLABLE, QUESTRADE REMUNERATION WAS ADDED TO THE PRICE OF THE SECURITY(IN THE CASE OF A PURCHASE) OR DEDUCTED FROM THE PRICE OF THE SECURITY(IN THE CASE OF A SALE). THIS AMOUNT WAS IN ADDITION TO ANY COMMISSION THIS TRADE CONFIRMATION SHOWS AS CHARGED TO YOU.",A,CU,103.32,"(10,332.00)",0.00,0.00,(242.96),"(10,574.96)","(10,574.96)"


WHERE

{
   SERVICE <x-sparql-anything:> {

        BIND(IRI(CONCAT("file://",?_loc)) AS ?__location)

        fx:properties
            fx:location ?__location ;    
            fx:csv.headers true ;
            fx:blank-nodes false ;
            fx:csv.null-string "" ;
            fx:root ?__location ;
        .

        ?__csvline xyz:CurrencyCode_Group_Account ?CurrencyCode_Group_Account .
        ?__csvline xyz:Trade%20Date ?TransactionDate .
        ?__csvline xyz:Settlement%20date ?SettlementDate .
        ?__csvline xyz:Trade%20%23 ?TradeNum .
        ?__csvline xyz:Action ?Action .
        ?__csvline xyz:Quantity ?Quantity .
        OPTIONAL { ?__csvline xyz:Symbol ?Equity_Symbol }
        ?__csvline xyz:Description ?Description .
        ?__csvline xyz:TB ?TB .
        ?__csvline xyz:EX ?EX .
        ?__csvline xyz:Price ?Price .
        ?__csvline xyz:Gross%20amount ?GrossAmount .
        ?__csvline xyz:Comm ?Commission .
        ?__csvline xyz:SEC%20fees ?SECFees .
        ?__csvline xyz:Interest%20amount ?InterestAmount .
        ?__csvline xyz:Net%20amount ?NetAmount .
        ?__csvline xyz:Net%20amount%20%28account%20currency%29 ?Netamountaccountcurrency .

    }

# Equity Symbol
    BIND(REPLACE(?Equity_Symbol,"^\\s*|\\s*$","") AS ?__symbol_str_clean)
    BIND(IF(
        # TODO convert to string
        STRSTARTS(?__symbol_str_clean, "."), 
        STRAFTER(?__symbol_str_clean, "."),
        IF(CONTAINS(?__symbol_str_clean, "."),
            STRBEFORE(?__symbol_str_clean, "."),
            ?__symbol_str_clean)) AS ?__symbol_str_norm)


# Trade Date - looks like 18-04-23 in the data
    BIND(REPLACE(?TransactionDate,"^(\\d{2})-(\\d{2})-(\\d{2})","20$3-$2-$1T00:00:00") AS ?__tx_dt_str)
    BIND(STRDT(?__tx_dt_str, xsd:dateTime) AS ?__transaction_date)
    BIND(REPLACE(STR(xsd:date(?__transaction_date)),"\\W+","-") AS ?__date_key)


### Clean up the numbers

# Quantity
    BIND(REPLACE(REPLACE(STR(?Quantity),"[^0-9.]", ""), "(\\.\\d{2})\\d*$", "$1") AS ?__qty_clean_str)
    BIND(ABS(xsd:integer(?__qty_clean_str)) AS ?__qty_amount)
# Price
    # BIND(REPLACE(REPLACE(STR(?Price),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__price_clean_str)
    BIND(REPLACE(STR(?Price),"[^0-9.]","") AS ?__price_clean_str)
    BIND(ABS(xsd:decimal(?__price_clean_str)) AS ?__price_amount)
# Gross Amount
    # BIND(REPLACE(REPLACE(STR(?GrossAmount),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__grossamt_clean_str)
    BIND(REPLACE(STR(?GrossAmount),"[^0-9.]","") AS ?__grossamt_clean_str)
    BIND(ABS(xsd:decimal(?__grossamt_clean_str)) AS ?__gross_amount)
# Commission
    # BIND(REPLACE(REPLACE(STR(?Commission),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__commamt_clean_str)
    BIND(REPLACE(STR(?Commission),"[^0-9.]","") AS ?__commamt_clean_str)
    BIND(ABS(xsd:decimal(?__commamt_clean_str)) AS ?__commission_amount)
# SEC Fees
    # BIND(REPLACE(REPLACE(STR(?SECFees),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__secfeesamt_clean_str)
    BIND(REPLACE(STR(?SECFees),"[^0-9.]","") AS ?__secfeesamt_clean_str)
    BIND(ABS(xsd:decimal(?__secfeesamt_clean_str)) AS ?__sec_fees_amount)    
# Interest
    # BIND(REPLACE(REPLACE(STR(?InterestAmount),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__intamt_clean_str)
    BIND(REPLACE(STR(?InterestAmount),"[^0-9.]","") AS ?__intamt_clean_str)
    BIND(ABS(xsd:decimal(?__intamt_clean_str)) AS ?__interest_amount)
# Net Amount 
    # BIND(REPLACE(REPLACE(STR(?NetAmount),"[^0-9.]",""), "(\\.\\d{2})\\d*$", "$1") AS ?__netmamt_clean)
    BIND(REPLACE(STR(?NetAmount),"[^0-9.]","") AS ?__netmamt_clean)
    BIND(ABS(xsd:decimal(?__netmamt_clean)) AS ?__net_amount)

# Sum of qty,price,gross,commission,net as a discrimator to create a unique Event IRI
    BIND(STR(round(?__qty_amount + ?__price_amount + ?__gross_amount + ?__commission_amount + ?__net_amount)*1000/1000) AS ?__discriminator_str)

# Local part of Security IRI = the equity symbol = where no ticker symbol exists
    BIND(IF(!BOUND(?__symbol_str_norm), MD5(CONCAT(
                ?__date_key,
                ?__discriminator_str
    )), ?unbound) AS ?__no_symbol)
    
# Equity Symbol
    BIND(COALESCE(UCASE(?__symbol_str_norm), ?__no_symbol) AS ?__eq_symbol)

# Is this a bond?
# Three clues: 1) no symbol, 2) trade ID starts with 'QT', 3) Exchange is 'CU' (Canadian other)
    BIND(xsd:boolean(!BOUND(?__symbol_str_norm) && STRSTARTS(?TradeNum,'QT') && ?EX='CU') AS ?__is_bond)

# Account Number
    BIND(REPLACE(?CurrencyCode_Group_Account,"^[^\\d]*([0-9]{8}).*$","$1") AS ?__acct_number)
    BIND(REPLACE(LCASE(STR(?__acct_number)), "\\W+", "-") AS ?__acct_key)

# Settlement Date
    BIND(REPLACE(?SettlementDate,"^(\\d{2})-(\\d{2})-(\\d{2})","20$3-$2-$1T00:00:00") AS ?__settle_dt_str)
    BIND(STRDT(?__settle_dt_str, xsd:dateTime) AS ?__settlement_date)

# Action - default to Unknown if not yet modeled
    BIND(REPLACE(UCASE(?Action),"[^a-zA-Z]","") AS ?__action_str)

# Event Type
    BIND(
    IF(?__action_str='BUY', gist:_FinancialBusinessEventType_purchase,
    IF(?__action_str='SELL', gist:_FinancialBusinessEventType_sale,
    mgx:_FinancialBusinessEventType_unknown)) AS ?__event_type)

# Marketable Security
    BIND(IRI(CONCAT(STR(mg3:),'_MarketableSecurity_', ?__eq_symbol)) AS ?__security)

# Security Account
    BIND(IRI(CONCAT(STR(mg3:),'_InvestmentAccount_',?__acct_key,'_',?__eq_symbol)) AS ?__security_account)

# Currency - CAD or USD
    BIND(REPLACE(?CurrencyCode_Group_Account,"^(\\w+).*$","$1") AS ?__curr_str)
    BIND(IF(STRSTARTS(UCASE(?__curr_str), "U"), gist:_USDollar, IF(STRSTARTS(UCASE(?__curr_str), "CAN"), mgx:_CADollar, ?unbound)) AS ?__event_currency)
    BIND(LCASE(REPLACE(?__curr_str, "\\W+","-")) AS ?__currency_key)

# Transaction key = convenience binding for making new IRIs
   BIND(CONCAT(
        ?__acct_key,'_',
        ?__eq_symbol,'_',
        REPLACE(LCASE(?Action),"\\W+","-"),'_',
        ?__date_key
        ) AS ?__tx_key)

# Trade Event
    BIND(IRI(CONCAT(
        STR(mg3:),
        '_Event_',
        ?__tx_key,
        '_',
        ?__discriminator_str)) AS ?__trade_event_iri)

# Repayment Conditions
    BIND(IF(?__is_bond, IRI(CONCAT(STR(mg3:),'_BondRepaymentTerms_', ?__eq_symbol)), ?unbound) AS ?__bond_repayment_terms)

# Coupon Payment Terms
    BIND(IF(?__is_bond, IRI(CONCAT(STR(mg3:),'_CouponPaymentTerms_', ?__eq_symbol)), ?unbound) AS ?__coupon_payment_terms)

# Coupon Payment Schedule
    BIND(IF(?__is_bond, IRI(CONCAT(STR(mg3:),'_CouponPaymentSchedule_',?__eq_symbol)), ?unbound) AS ?__coupon_payment_schedule)

### Parse Description to get goodies on bonds
#
# LAURENTIAN BANK OF CANADA, FXD 2027 FLTG RT 2032 SUBORD, NOTES (NVCC), DUE 06/15/2032 05.095% JD 15, YTM: 6.1880%, INT DAYS 175,NEXT CPN 24/06/15, QUESTRADE REMUNERATION WAS ADDED TO THE PRICE OF THE SECURITY(IN THE CASE OF A PURCHASE) OR DEDUCTED FROM THE PRICE OF THE SECURITY(IN THE CASE OF A SALE). THIS AMOUNT WAS IN ADDITION TO ANY COMMISSION THIS TRADE CONFIRMATION SHOWS AS CHARGED TO YOU.
# FEDEX CORP, DUE 01/15/2034 04.900% JJ 15, YTM: 4.8995%, INT DAYS 152,NEXT CPN 24/07/15, CALLABLE, QUESTRADE REMUNERATION WAS ADDED TO THE PRICE OF THE SECURITY(IN THE CASE OF A PURCHASE) OR DEDUCTED FROM THE PRICE OF THE SECURITY(IN THE CASE OF A SALE). THIS AMOUNT WAS IN ADDITION TO ANY COMMISSION THIS TRADE CONFIRMATION SHOWS AS CHARGED TO YOU.

# Issuer   
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "^[\\w\\s]+,"), REPLACE(?Description, "^([\\w\\s]+),.*$", "$1"), ?unbound) AS ?__issuer_str)
    BIND(IRI(CONCAT(STR(mg3:),"_Organization_",LCASE(REPLACE(?__issuer_str,"\\W+","-")))) AS ?__issuer_iri)

# Debt Details
    BIND("^[\\w\\s]+,[\\w\\s,]+ DUE" AS ?__desc_regex)
    BIND("^([\\w\\s]+),.*$" AS ?__desc_repl_regex)
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), ?__desc_regex), REPLACE(?Description, ?__desc_repl_regex, "$1"), ?unbound) AS ?__debt_details_str)

# Maturity
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "DUE"), REPLACE(?Description, "^.*DUE ([0-9]{2})/([0-9]{2})/([0-9]{4}).*$", "$3-$1-$2T00:00:00"), ?unbound) AS ?__maturity_str)
    BIND(STRDT(?__maturity_str, xsd:dateTime) AS ?__maturity)

# Coupon Rate
#    "DUE [0-9/]+ ([\\d.]+)% ([A-Z]{2}) (\\d{2})", ""
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "DUE [\\d/]+ [\\d.]+%"), REPLACE(?Description, "^.*DUE [\\d/]+ ([\\d.]+)%.*$", "$1"), ?unbound) AS ?__coupon_str)
    BIND(xsd:decimal(?__coupon_str)/100 as ?__coupon_rate)
    BIND(IRI(CONCAT(STR(mg3:),'_Coupon_', ?__eq_symbol, '_', REPLACE(?__coupon_str, "\\W+","-"))) AS ?__coupon_magn)

# Month Pair
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "\\b[A-Z]{2}\\b\\s[0-9]{2}"), REPLACE(?Description, "^.*\\b([A-Z]{2})\\b\\s[0-9]{2}.*$", "$1"), ?unbound) AS ?__mo_pair_str)

# Coupon Payment Months
    OPTIONAL {
        VALUES (?monthduo ?earlier_mo ?later_mo) { 
            ("JJ" 01 07) 
            ("FA" 02 08) 
            ("MS" 03 09) 
            ("AO" 04 10) 
            ("MN" 05 11) 
            ("JD" 06 12)
        }
        FILTER(STR(?__mo_pair_str) = ?monthduo)
        BIND(?earlier_mo AS ?__coupon_mo_earlier)
        BIND(?later_mo AS ?__coupon_mo_later)
    }
  
# Month-Day Number of Payment, 01 - 31
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "[A-Z]{2} [0-9]{2},"), REPLACE(?Description, "^.*\\b[A-Z]{2}\\b ([0-9]{2}).*$", "$1"), ?unbound) AS ?__mo_day_nb_str)
    BIND(xsd:integer(?__mo_day_nb_str) AS ?__mo_day_nbr)

# Yield To Maturity
    BIND(IF(CONTAINS(?Description, "YTM"), REPLACE(?Description, "^.*YTM:?\\s*([0-9.-]+).*$", "$1"), ?unbound) AS ?__ytm_str)
    BIND(STRDT(?__ytm_str, xsd:decimal)/100 AS ?__ytm_num)
    BIND(IRI(CONCAT(STR(mg3:),'_Magnitude_yieldToMaturity_',?__currency_key,'_',REPLACE(?__ytm_str,"\\W+","-"))) AS ?__ytm_magn)

# Interest Days (paid to previous owner)
    BIND(IF(?__is_bond && REGEX(UCASE(?Description), "INT DAYS [0-9]{1,3}\\s*,"), 
        REPLACE(?Description, "^.*INT DAYS ([0-9]{1,3}).*$", "$1"), 
        ?unbound) 
    AS ?__int_days_str)
    BIND(xsd:integer(?__int_days_str) AS ?__int_days)

    BIND(IRI(CONCAT(STR(mg3:),"_Magnitude_interestDaysPaid_",?__currency_key,'_',STR(?__int_days))) AS ?__int_days_magn)

# Callable?
    BIND(IF(?__is_bond, xsd:boolean(CONTAINS(UCASE(?Description), 'CALLABLE')), ?unbound) AS ?__is_callable)

# First coupon date following purchase
# NEXT CPN 23/08/28
    BIND(IF(?__is_bond && CONTAINS(UCASE(?Description), 'NEXT CPN'), REPLACE(?Description, "^.*NEXT CPN:?\\s*([0-9]+)/([0-9]+)/([0-9]+).*$", "20$1-$2-$3T00:00:00"), ?unbound) AS ?__next_cpn_dt_str)
    BIND(STRDT(?__next_cpn_dt_str, xsd:dateTime) AS ?__next_cpn_dt)

# Next coupon event (first after purchase)
    BIND(IF(BOUND(?__next_cpn_dt), IRI(CONCAT(
        STR(mg3:),
        '_Event_',
        ?__acct_key,'_',
        ?__eq_symbol,'_',
        'int','_',
        REPLACE(?__next_cpn_dt_str,"\\W+","-"))), ?unbound) AS ?__next_coupon_evt)
# Label
    BIND(CONCAT("First coupon after purchase: ", STRBEFORE(?__next_cpn_dt_str,"T")) AS ?__next_cpn_label)

# Repayment Event
    BIND(IF(?__is_bond, IRI(CONCAT(STR(mg3:),'_Event_debtPrincipalRepayment_',?__acct_key,'_',?__eq_symbol)), ?unbound) AS ?__repayment_event)


#### Buy
# Need all of Quantity,Price,Gross Amt,Commission,Net Amt
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_shareQuantity_',?__currency_key,'_',?__qty_clean_str)),
    ?unbound) AS ?__purchase_qty_magn)

BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_unitPrice_',?__currency_key,'_',?__price_clean_str)),
    ?unbound) AS ?__purchase_price_magn)

BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_grossAmount_',?__currency_key,'_',?__grossamt_clean_str)),
    ?unbound) AS ?__purchase_gross_amt_magn)

# Commission Fees magnitude
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_commissionPaid_',?__currency_key,'_',?__commamt_clean_str)),
    ?unbound) AS ?__purchase_commission_magn)

# SEC Fees magnitude
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_SECFees_paid_',?__currency_key,'_',?__secfeesamt_clean_str)),
    ?unbound) AS ?__purchase_sec_fees_magn)

# Interest
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_interestPaid_',?__currency_key,'_',?__intamt_clean_str)),
    ?unbound) AS ?__purchase_interest_magn)

# Net Amount
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_purchase,
    IRI(CONCAT(STR(mg3:),'_Magnitude_netAmount_',?__currency_key,'_',?__netmamt_clean)),
    ?unbound) AS ?__purchase_net_amt_magn)

### Sell
# Need all of Quantity,Price,Gross Amt,Commission,Net Amt
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_shareQuantity_',?__currency_key,'_',?__qty_clean_str)),
    ?unbound) AS ?__sale_qty_magn)

BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_unitPrice_',?__currency_key,'_',?__price_clean_str)),
    ?unbound) AS ?__sale_price_magn)

BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_grossAmount_',?__currency_key,'_',?__grossamt_clean_str)),
    ?unbound) AS ?__sale_gross_amt_magn)

BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_commissionPaid_',?__currency_key,'_',?__commamt_clean_str)),
    ?unbound) AS ?__sale_commission_magn)

# SEC Fees magnitude
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_SECFees_paid_',?__currency_key,'_',?__secfeesamt_clean_str)),
    ?unbound) AS ?__sale_sec_fees_magn)

# Interest paid
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_interestPaid_',?__currency_key,'_',?__intamt_clean_str)),
    ?unbound) AS ?__sale_interest_magn)

# Net Amount
BIND(IF(?__event_type = gist:_FinancialBusinessEventType_sale,
    IRI(CONCAT(STR(mg3:),'_Magnitude_netAmount_',?__currency_key,'_',?__netmamt_clean)),
    ?unbound) AS ?__sale_net_amt_magn)

# Exchange
    BIND(IRI(CONCAT(STR(mgx:), "_Exchange_", LCASE(REPLACE(?EX, "\\W+", "-")))) AS ?__exchange)
}