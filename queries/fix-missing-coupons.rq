PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX mg3: <https://w3id.org/moneygraph/ns/data/>
PREFIX gist: <https://w3id.org/semanticarts/ns/ontology/gist/>
PREFIX mg: <https://w3id.org/moneygraph/ns/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX mgx: <https://w3id.org/moneygraph/ns/taxonomy/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

INSERT
{
	GRAPH mg3:__securities__extra {
      ?bond_iri mg:isTradedOn ?__exchange ;
          mg:isIssuedBy ?__issuer ;
       .

      ?__repayment_terms mg:callable ?__callable .

       ?__coupon_payment_terms gist:specifies ?__coupon_payment_schedule , ?__coupon_magn ;
           mg:couponPaymentMonthNumber ?__coupon_mo ;
           mg:couponPaymentMonthDayNumber ?__mo_day_nbr ;
      .
        ?__coupon_magn a mg:BondCoupon ;
            gist:hasUnitOfMeasure mg:_RatioUnit_annualInterestRate ;
            gist:numericValue ?__coupon ;
            gist:isCategorizedBy mgx:_Aspect_annualInterestRate ;
        .      
	    ?__coupon_payment_schedule a mg:CouponPaymentSchedule ;
           gist:hasMember ?__next_coupon_evt .

        ?__security_acct gist:isAffectedBy ?__next_coupon_evt .

 }
GRAPH mg3:__activities__extra {
    ?__buy_sell_event mg:longDescription ?__longdesc ;
        gist:hasMagnitude ?__ytm_magn ;
        mg:transactionDate ?__trade_tx_dt ;
        mg:settlementDate ?__trade_settlement_date ;
        gist:isCharacterizedAs ?__event_type ;
        gist:hasMagnitude ?__trade_magn ; # This grabs all the magnitudes known to Trades
        a gist:Event ;
        owl:sameAs ?__trade_temp ; # Make the Trade Confirmation event the same as this one
    .
    ?__trade_magn ?__magn_p ?__magn_o .

#    ?__trade_purchase_evt gist:isCharacterizedAs gist:_FinancialBusinessEventType_purchase ;
#        gist:hasMagnitude ?__purchase_qty_magn .
#        ?__purchase_qty_magn gist:numericValue ?__principal_temp ;
#            gist:hasUnitOfMeasure gist:_each ;
#            gist:isCategorizedBy mgx:_Aspect_securityShareCount ;
#        .
#        
#    ?__trade_magn gist:hasUnitOfMeasure ?__currency_uom ; ?__magn_p ?__magn_o .
  }
}


# SELECT DISTINCT ?__security ?__trade_security ?__tx_dt ?__trade_tx_dt ?__qty_amount ?__trade_qty_amount ?__price_amount ?__trade_price_amount ?__gross_amount ?__trade_gross_amount ?__commission_amount ?__trade_commission_amount ?__net_amount ?__trade_net_amount

# SELECT DISTINCT ?__security ?__trade_security ?__exchange ?__callable (GROUP_CONCAT(?__coupon_mo; SEPARATOR=";") AS ?coupon_months) ?__mo_day_nbr ?__next_coupon_evt ?__coupon_rate
#  select distinct ?__acct_number ?bond ?bond_iri ?__secacct ?maturity ?principal ?__coupon ?__trade_tx_dt ?__acct_key ?__eq_symbol ?__event_type_str ?__date_key ?__currency

WHERE
{
GRAPH mg3:__securities__ {
    ?bond_iri gist:isCategorizedBy mgx:_MarketableSecurityType_bond ; skos:prefLabel ?bond ;
        gist:conformsTo ?__repayment_terms ;
        gist:isIdentifiedBy [ gist:uniqueText ?__equity_symbol_str ] ;
    .
    ?__secacct gist:hasPositionIn ?bond_iri . 
        
    ?__repayment_terms gist:specifies [
            gist:isCharacterizedAs mgx:_FinancialBusinessEventType_debtPrincipalRepayment ;
            gist:affects ?__secacct ; 
            mg:plannedOccursDate ?maturity ;
            gist:hasMagnitude [ 
                gist:isCategorizedBy mgx:_Aspect_debtPrincipalAmount ; 
                gist:numericValue ?principal ;
            ] ;
            a gist:ScheduledEvent ;
    ] .    

    # In some cases we already know the coupon rate
    OPTIONAL { ?bond_iri gist:conformsTo ?__sec_coupon_terms .
            ?__sec_coupon_terms a mg:CouponPaymentTerms ; gist:specifies [ a mg:BondCoupon ; gist:numericValue ?coupon_listed ] .
    }

# Portfolio account
    [] gist:hasMember ?__secacct ;
        gist:isIdentifiedBy [ gist:uniqueText ?__acct_number ; 
            gist:isAllocatedBy mg3:_Organization_Questrade_Inc ;
    ] .
}

# GRAPH mg3:__activities__ {
#     OPTIONAL { 
#         ?__secacct gist:isAffectedBy [ 
#             gist:isCharacterizedAs mgx:_FinancialBusinessEventType_interestRemittance ;
#             gist:hasMagnitude [ gist:numericValue ?coupon_amt ] ;
#         ] .
#     }
# }

GRAPH mg3:__trades__ {
    [] gist:hasPositionIn ?__trade_security ;
        gist:isAffectedBy ?__trade_event_iri, ?__trade_purchase_evt ;
    .

    ?__trade_event_iri mg:transactionDate ?__trade_tx_dt ;
        mg:settlementDate ?__trade_settlement_date ;
        gist:isCharacterizedAs ?__event_type ;
        gist:hasMagnitude ?__trade_magn ;
        mg:longDescription ?__longdesc ;
        a gist:Event ;
    .
    ?__trade_purchase_evt gist:isCharacterizedAs gist:_FinancialBusinessEventType_purchase ;
        gist:hasMagnitude [ 
            gist:numericValue ?__principal_temp ;
            gist:hasUnitOfMeasure gist:_each ;
            gist:isCategorizedBy mgx:_Aspect_securityShareCount ;
    ] .
        
    ?__trade_magn gist:hasUnitOfMeasure ?__currency_uom ; ?__magn_p ?__magn_o .

    ?__trade_security mg:isTradedOn ?__exchange ; 
        gist:conformsTo ?__bond_repayment_terms_temp ;
        mg:isIssuedBy ?__issuer ;
    .

    ?__bond_repayment_terms_temp mg:callable ?__callable ;
        gist:specifies [ 
            gist:isCharacterizedAs mgx:_FinancialBusinessEventType_debtPrincipalRepayment ;
            mg:plannedOccursDate ?__maturity_temp ;
        ] ;
        a mg:BondRepaymentTerms ;
    .

    OPTIONAL { 
        ?__trade_security gist:conformsTo [
            gist:specifies ?__coupon_payment_schedule_temp, ?__coupon_magn_temp ;
            mg:couponPaymentMonthNumber ?__coupon_mo ;
            mg:couponPaymentMonthDayNumber ?__mo_day_nbr ;
        ] .
        
	    ?__coupon_payment_schedule_temp a mg:CouponPaymentSchedule ;
            gist:hasMember ?__next_coupon_evt .

        ?__coupon_magn_temp gist:numericValue ?__coupon_temp .
    }
}

BIND(2 * ?coupon_amt / ?principal AS ?coupon_calc)
# Hope that one of the two coupon determination methods succeeds
BIND(COALESCE(?coupon_listed, ?__coupon_temp, ?coupon_calc) AS ?__coupon)


?__event_type skos:prefLabel ?__event_type_str .
?__currency_uom gist:unitSymbol ?__currency .
BIND(REPLACE(STR(?__trade_tx_dt),"\\W+","-") AS ?__date_key)
BIND(REPLACE(STR(?__acct_number),"\\W+","-") AS ?__acct_key)
    
FILTER(
    ?maturity = ?__maturity_temp
    && ?principal = ?__principal_temp
)
    
BIND(IF(
    STRSTARTS(?__equity_symbol_str,"."), 
    STRAFTER(?__equity_symbol_str,"."),
    IF(CONTAINS(?__equity_symbol_str,"."),
        STRBEFORE(?__equity_symbol_str,"."),
        ?__equity_symbol_str)) AS ?__symbol_str_norm)
# Equity Symbol
BIND(REPLACE(UCASE(STR(?__symbol_str_norm)), "\\W+", "-") AS ?__eq_symbol)

# Transaction key = convenience binding for making new IRIs
    BIND(CONCAT(
        ?__acct_key,'_',
        ?__eq_symbol,'_',
        REPLACE(?__event_type_str,"\\W+","-"),'_',
        ?__date_key,'_',
        ?__currency
        ) AS ?__tx_key)

# Coupon Payment Terms
    BIND(IRI(CONCAT(STR(mg3:),'_CouponPaymentTerms_', ?__eq_symbol)) AS ?__coupon_payment_terms)
# Coupon Payment Schedule
    BIND(IRI(CONCAT(STR(mg3:),'_CouponPaymentSchedule_', ?__eq_symbol)) AS ?__coupon_payment_schedule)
# Coupon
    BIND(IRI(CONCAT(STR(mg3:),'_Coupon_', ?__eq_symbol, '_', REPLACE(STR(?__coupon * 100), "\\W+","-"))) AS ?__coupon_magn)
# Magnitude for Principal 
    BIND(IRI(CONCAT(STR(mg3:),'_Magnitude_shareQuantity_',?__tx_key,'_',?__qty_clean_str)) AS ?__purchase_qty_magn)

# Activity
    BIND(IRI(CONCAT(
        STR(mg3:),
        '_Event_',
        ?__tx_key
    )) AS ?__buy_sell_event)
    
# 

# Activity Label
    BIND(CONCAT(REPLACE(?__event_type_str,"\\W+","-"), " ", ?__eq_symbol, " ", STR(?__date_key)) AS ?__activity_label)
}
#  GROUP BY ?__security ?__trade_security ?__exchange ?__callable ?__mo_day_nbr ?__next_coupon_evt ?__coupon_rate
#ORDER BY ?__tx_dt